//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Slackware.ServiceReferenceSlack {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblEntry", Namespace="http://schemas.datacontract.org/2004/07/SlackService")]
    [System.SerializableAttribute()]
    public partial class tblEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceSlack.IServiceFunc")]
    public interface IServiceFunc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFunc/GetData", ReplyAction="http://tempuri.org/IServiceFunc/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFunc/GetData", ReplyAction="http://tempuri.org/IServiceFunc/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFunc/AddEntry", ReplyAction="http://tempuri.org/IServiceFunc/AddEntryResponse")]
        bool AddEntry(Slackware.ServiceReferenceSlack.tblEntry entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFunc/AddEntry", ReplyAction="http://tempuri.org/IServiceFunc/AddEntryResponse")]
        System.Threading.Tasks.Task<bool> AddEntryAsync(Slackware.ServiceReferenceSlack.tblEntry entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFunc/SearchEntry", ReplyAction="http://tempuri.org/IServiceFunc/SearchEntryResponse")]
        Slackware.ServiceReferenceSlack.tblEntry[] SearchEntry(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFunc/SearchEntry", ReplyAction="http://tempuri.org/IServiceFunc/SearchEntryResponse")]
        System.Threading.Tasks.Task<Slackware.ServiceReferenceSlack.tblEntry[]> SearchEntryAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFunc/UpdateEntry", ReplyAction="http://tempuri.org/IServiceFunc/UpdateEntryResponse")]
        bool UpdateEntry(Slackware.ServiceReferenceSlack.tblEntry entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFunc/UpdateEntry", ReplyAction="http://tempuri.org/IServiceFunc/UpdateEntryResponse")]
        System.Threading.Tasks.Task<bool> UpdateEntryAsync(Slackware.ServiceReferenceSlack.tblEntry entry);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceFuncChannel : Slackware.ServiceReferenceSlack.IServiceFunc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceFuncClient : System.ServiceModel.ClientBase<Slackware.ServiceReferenceSlack.IServiceFunc>, Slackware.ServiceReferenceSlack.IServiceFunc {
        
        public ServiceFuncClient() {
        }
        
        public ServiceFuncClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceFuncClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceFuncClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceFuncClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public bool AddEntry(Slackware.ServiceReferenceSlack.tblEntry entry) {
            return base.Channel.AddEntry(entry);
        }
        
        public System.Threading.Tasks.Task<bool> AddEntryAsync(Slackware.ServiceReferenceSlack.tblEntry entry) {
            return base.Channel.AddEntryAsync(entry);
        }
        
        public Slackware.ServiceReferenceSlack.tblEntry[] SearchEntry(string title) {
            return base.Channel.SearchEntry(title);
        }
        
        public System.Threading.Tasks.Task<Slackware.ServiceReferenceSlack.tblEntry[]> SearchEntryAsync(string title) {
            return base.Channel.SearchEntryAsync(title);
        }
        
        public bool UpdateEntry(Slackware.ServiceReferenceSlack.tblEntry entry) {
            return base.Channel.UpdateEntry(entry);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEntryAsync(Slackware.ServiceReferenceSlack.tblEntry entry) {
            return base.Channel.UpdateEntryAsync(entry);
        }
    }
}
